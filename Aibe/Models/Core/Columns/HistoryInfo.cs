using Extension.Models;
using Extension.String;
using System.Collections.Generic;
using System.Linq;

namespace Aibe.Models.Core {
  public class HistoryInfo : CommonBaseInfo {
    public Dictionary<string, string> ColumnTranslation { get; private set; }
    public bool IsTransferAll { get { return ColumnTranslation == null || !ColumnTranslation.Any(); } }
    public string CustomHRTSColumnName { get; private set; }
    public bool HasCustomHRTSColumnName { get { return CustomHRTSColumnName != null; } }
    public HistoryInfo(string desc) : base(desc) {
      if (!HasRightSide)
        return;
      var rightParts = RightSide.GetTrimmedNonEmptyParts(',');
      Dictionary<string, string> tempDict = new Dictionary<string, string>();
      foreach (var rightPart in rightParts) {
        SimpleExpression exp = new SimpleExpression(rightPart, ":", false);
        if (!exp.IsValid)
          continue;
        if(!exp.IsSingular && exp.RightSide.EqualsIgnoreCase(DH.AutoGeneratedHRTSWord)) {
          CustomHRTSColumnName = exp.LeftSide;
          continue;
        }          
        tempDict.Add(exp.LeftSide, exp.IsSingular ? exp.LeftSide : exp.RightSide);
      }
      if (tempDict.Any())
        ColumnTranslation = tempDict;
    }
  }
}
